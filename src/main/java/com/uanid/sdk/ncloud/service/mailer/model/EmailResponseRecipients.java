/*
 * api
 * Cloud Outbound Mailer API<br/>https://mail.test-apigw.ntruss.com/api/v1
 *
 * OpenAPI spec version: 2019-06-20T02:51:35Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.uanid.sdk.ncloud.service.mailer.model;

import java.util.Objects;

/**
 * EmailResponseRecipients
 */
public class EmailResponseRecipients {
	private String address = null;

	private String name = null;

	private EmailResponseType type = null;

	private Boolean received = false;

	private NesDateTime receivedDate = null;

	private EmailResponseEmailStatus status = null;

	private Integer retryCount = null;

	private String sendResultMessage = null;

	public EmailResponseRecipients address(String address) {
		this.address = address;
		return this;
	}

	 /**
	 * 수신자 Email 주소
	 * @return address
	**/
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public EmailResponseRecipients name(String name) {
		this.name = name;
		return this;
	}

	 /**
	 * 수신자 명
	 * @return name
	**/
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public EmailResponseRecipients type(EmailResponseType type) {
		this.type = type;
		return this;
	}

	 /**
	 * Get type
	 * @return type
	**/
	public EmailResponseType getType() {
		return type;
	}

	public void setType(EmailResponseType type) {
		this.type = type;
	}

	public EmailResponseRecipients received(Boolean received) {
		this.received = received;
		return this;
	}

	 /**
	 * 수신 여부
	 * @return received
	**/
	public Boolean isReceived() {
		return received;
	}

	public void setReceived(Boolean received) {
		this.received = received;
	}

	public EmailResponseRecipients receivedDate(NesDateTime receivedDate) {
		this.receivedDate = receivedDate;
		return this;
	}

	 /**
	 * 수신 일시
	 * @return receivedDate
	**/
	public NesDateTime getReceivedDate() {
		return receivedDate;
	}

	public void setReceivedDate(NesDateTime receivedDate) {
		this.receivedDate = receivedDate;
	}

	public EmailResponseRecipients status(EmailResponseEmailStatus status) {
		this.status = status;
		return this;
	}

	 /**
	 * Get status
	 * @return status
	**/
	public EmailResponseEmailStatus getStatus() {
		return status;
	}

	public void setStatus(EmailResponseEmailStatus status) {
		this.status = status;
	}

	public EmailResponseRecipients retryCount(Integer retryCount) {
		this.retryCount = retryCount;
		return this;
	}

	 /**
	 * 재발송 시도 횟수
	 * @return retryCount
	**/
	public Integer getRetryCount() {
		return retryCount;
	}

	public void setRetryCount(Integer retryCount) {
		this.retryCount = retryCount;
	}

	public EmailResponseRecipients sendResultMessage(String sendResultMessage) {
		this.sendResultMessage = sendResultMessage;
		return this;
	}

	 /**
	 * 발송 결과 상세 메시지
	 * @return sendResultMessage
	**/
	public String getSendResultMessage() {
		return sendResultMessage;
	}

	public void setSendResultMessage(String sendResultMessage) {
		this.sendResultMessage = sendResultMessage;
	}


	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		EmailResponseRecipients emailResponseRecipients = (EmailResponseRecipients) o;
		return Objects.equals(this.address, emailResponseRecipients.address) &&
				Objects.equals(this.name, emailResponseRecipients.name) &&
				Objects.equals(this.type, emailResponseRecipients.type) &&
				Objects.equals(this.received, emailResponseRecipients.received) &&
				Objects.equals(this.receivedDate, emailResponseRecipients.receivedDate) &&
				Objects.equals(this.status, emailResponseRecipients.status) &&
				Objects.equals(this.retryCount, emailResponseRecipients.retryCount) &&
				Objects.equals(this.sendResultMessage, emailResponseRecipients.sendResultMessage);
	}

	@Override
	public int hashCode() {
		return Objects.hash(address, name, type, received, receivedDate, status, retryCount, sendResultMessage);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class EmailResponseRecipients {\n");
		
		sb.append("		address: ").append(toIndentedString(address)).append("\n");
		sb.append("		name: ").append(toIndentedString(name)).append("\n");
		sb.append("		type: ").append(toIndentedString(type)).append("\n");
		sb.append("		received: ").append(toIndentedString(received)).append("\n");
		sb.append("		receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
		sb.append("		status: ").append(toIndentedString(status)).append("\n");
		sb.append("		retryCount: ").append(toIndentedString(retryCount)).append("\n");
		sb.append("		sendResultMessage: ").append(toIndentedString(sendResultMessage)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

