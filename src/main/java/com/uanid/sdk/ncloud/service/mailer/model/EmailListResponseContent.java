/*
 * api
 * Cloud Outbound Mailer API<br/>https://mail.test-apigw.ntruss.com/api/v1
 *
 * OpenAPI spec version: 2019-06-20T02:51:35Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.uanid.sdk.ncloud.service.mailer.model;

import java.util.Objects;

/**
 * EmailListResponseContent
 */
public class EmailListResponseContent {
	private String requestId = null;

	private NesDateTime requestDate = null;

	private String mailId = null;

	private Integer templateSid = null;

	private String templateName = null;

	private String title = null;

	private EmailListResponseEmailStatus emailStatus = null;

	private String senderAddress = null;

	private String senderName = null;

	private NesDateTime sendDate = null;

	private EmailListResponseReservationStatus reservationStatus = null;

	private Boolean advertising = null;

	private String representativeRecipient = null;

	public EmailListResponseContent requestId(String requestId) {
		this.requestId = requestId;
		return this;
	}

	 /**
	 * Email 발송 요청 ID (각 요청을 구분하는 ID, 한번에 여러건에 메일 발송을 요청할 경우 requestId가 여러개의 mailId를 포함할 수 있다.
	 * @return requestId
	**/
	public String getRequestId() {
		return requestId;
	}

	public void setRequestId(String requestId) {
		this.requestId = requestId;
	}

	public EmailListResponseContent requestDate(NesDateTime requestDate) {
		this.requestDate = requestDate;
		return this;
	}

	 /**
	 * 요청일시
	 * @return requestDate
	**/
	public NesDateTime getRequestDate() {
		return requestDate;
	}

	public void setRequestDate(NesDateTime requestDate) {
		this.requestDate = requestDate;
	}

	public EmailListResponseContent mailId(String mailId) {
		this.mailId = mailId;
		return this;
	}

	 /**
	 * Email ID (각 메일 한 건을 구분하는 ID)
	 * @return mailId
	**/
	public String getMailId() {
		return mailId;
	}

	public void setMailId(String mailId) {
		this.mailId = mailId;
	}

	public EmailListResponseContent templateSid(Integer templateSid) {
		this.templateSid = templateSid;
		return this;
	}

	 /**
	 * 템플릿 ID
	 * @return templateSid
	**/
	public Integer getTemplateSid() {
		return templateSid;
	}

	public void setTemplateSid(Integer templateSid) {
		this.templateSid = templateSid;
	}

	public EmailListResponseContent templateName(String templateName) {
		this.templateName = templateName;
		return this;
	}

	 /**
	 * 템플릿 제목
	 * @return templateName
	**/
	public String getTemplateName() {
		return templateName;
	}

	public void setTemplateName(String templateName) {
		this.templateName = templateName;
	}

	public EmailListResponseContent title(String title) {
		this.title = title;
		return this;
	}

	 /**
	 * Mail 제목
	 * @return title
	**/
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public EmailListResponseContent emailStatus(EmailListResponseEmailStatus emailStatus) {
		this.emailStatus = emailStatus;
		return this;
	}

	 /**
	 * Get emailStatus
	 * @return emailStatus
	**/
	public EmailListResponseEmailStatus getEmailStatus() {
		return emailStatus;
	}

	public void setEmailStatus(EmailListResponseEmailStatus emailStatus) {
		this.emailStatus = emailStatus;
	}

	public EmailListResponseContent senderAddress(String senderAddress) {
		this.senderAddress = senderAddress;
		return this;
	}

	 /**
	 * 발송자 Email 주소
	 * @return senderAddress
	**/
	public String getSenderAddress() {
		return senderAddress;
	}

	public void setSenderAddress(String senderAddress) {
		this.senderAddress = senderAddress;
	}

	public EmailListResponseContent senderName(String senderName) {
		this.senderName = senderName;
		return this;
	}

	 /**
	 * 발송자 이름
	 * @return senderName
	**/
	public String getSenderName() {
		return senderName;
	}

	public void setSenderName(String senderName) {
		this.senderName = senderName;
	}

	public EmailListResponseContent sendDate(NesDateTime sendDate) {
		this.sendDate = sendDate;
		return this;
	}

	 /**
	 * 발송완료 일시
	 * @return sendDate
	**/
	public NesDateTime getSendDate() {
		return sendDate;
	}

	public void setSendDate(NesDateTime sendDate) {
		this.sendDate = sendDate;
	}

	public EmailListResponseContent reservationStatus(EmailListResponseReservationStatus reservationStatus) {
		this.reservationStatus = reservationStatus;
		return this;
	}

	 /**
	 * Get reservationStatus
	 * @return reservationStatus
	**/
	public EmailListResponseReservationStatus getReservationStatus() {
		return reservationStatus;
	}

	public void setReservationStatus(EmailListResponseReservationStatus reservationStatus) {
		this.reservationStatus = reservationStatus;
	}

	public EmailListResponseContent advertising(Boolean advertising) {
		this.advertising = advertising;
		return this;
	}

	 /**
	 * 광고메일 여부
	 * @return advertising
	**/
	public Boolean isAdvertising() {
		return advertising;
	}

	public void setAdvertising(Boolean advertising) {
		this.advertising = advertising;
	}

	public EmailListResponseContent representativeRecipient(String representativeRecipient) {
		this.representativeRecipient = representativeRecipient;
		return this;
	}

	 /**
	 * 수신자 목록 축약표현 (참조/숨은참조 포함하여 총 10명에게 발송된 메일의 경우 xxx@domain.com(9) 의 형태로 표시됨)
	 * @return representativeRecipient
	**/
	public String getRepresentativeRecipient() {
		return representativeRecipient;
	}

	public void setRepresentativeRecipient(String representativeRecipient) {
		this.representativeRecipient = representativeRecipient;
	}


	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		EmailListResponseContent emailListResponseContent = (EmailListResponseContent) o;
		return Objects.equals(this.requestId, emailListResponseContent.requestId) &&
				Objects.equals(this.requestDate, emailListResponseContent.requestDate) &&
				Objects.equals(this.mailId, emailListResponseContent.mailId) &&
				Objects.equals(this.templateSid, emailListResponseContent.templateSid) &&
				Objects.equals(this.templateName, emailListResponseContent.templateName) &&
				Objects.equals(this.title, emailListResponseContent.title) &&
				Objects.equals(this.emailStatus, emailListResponseContent.emailStatus) &&
				Objects.equals(this.senderAddress, emailListResponseContent.senderAddress) &&
				Objects.equals(this.senderName, emailListResponseContent.senderName) &&
				Objects.equals(this.sendDate, emailListResponseContent.sendDate) &&
				Objects.equals(this.reservationStatus, emailListResponseContent.reservationStatus) &&
				Objects.equals(this.advertising, emailListResponseContent.advertising) &&
				Objects.equals(this.representativeRecipient, emailListResponseContent.representativeRecipient);
	}

	@Override
	public int hashCode() {
		return Objects.hash(requestId, requestDate, mailId, templateSid, templateName, title, emailStatus, senderAddress, senderName, sendDate, reservationStatus, advertising, representativeRecipient);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class EmailListResponseContent {\n");
		
		sb.append("		requestId: ").append(toIndentedString(requestId)).append("\n");
		sb.append("		requestDate: ").append(toIndentedString(requestDate)).append("\n");
		sb.append("		mailId: ").append(toIndentedString(mailId)).append("\n");
		sb.append("		templateSid: ").append(toIndentedString(templateSid)).append("\n");
		sb.append("		templateName: ").append(toIndentedString(templateName)).append("\n");
		sb.append("		title: ").append(toIndentedString(title)).append("\n");
		sb.append("		emailStatus: ").append(toIndentedString(emailStatus)).append("\n");
		sb.append("		senderAddress: ").append(toIndentedString(senderAddress)).append("\n");
		sb.append("		senderName: ").append(toIndentedString(senderName)).append("\n");
		sb.append("		sendDate: ").append(toIndentedString(sendDate)).append("\n");
		sb.append("		reservationStatus: ").append(toIndentedString(reservationStatus)).append("\n");
		sb.append("		advertising: ").append(toIndentedString(advertising)).append("\n");
		sb.append("		representativeRecipient: ").append(toIndentedString(representativeRecipient)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

