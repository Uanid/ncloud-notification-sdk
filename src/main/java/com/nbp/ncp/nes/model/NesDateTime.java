/*
 * api
 * Cloud Outbound Mailer API<br/>https://mail.test-apigw.ntruss.com/api/v1
 *
 * OpenAPI spec version: 2019-06-20T02:51:35Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.nbp.ncp.nes.model;

import java.util.Objects;

/**
 * NesDateTime
 */
public class NesDateTime {
	private Long utc = null;

	private String formattedDate = null;

	private String formattedDateTime = null;

	public NesDateTime utc(Long utc) {
		this.utc = utc;
		return this;
	}

	 /**
	 * 1970년 1월 1일 00:00:00 협정 세계시(UTC) 부터의 경과 시간을  1/1000초로 환산한 정수
	 * @return utc
	**/
	public Long getUtc() {
		return utc;
	}

	public void setUtc(Long utc) {
		this.utc = utc;
	}

	public NesDateTime formattedDate(String formattedDate) {
		this.formattedDate = formattedDate;
		return this;
	}

	 /**
	 * &#39;yyyy-MM-dd&#39; UTC+09:00 형태의 날짜
	 * @return formattedDate
	**/
	public String getFormattedDate() {
		return formattedDate;
	}

	public void setFormattedDate(String formattedDate) {
		this.formattedDate = formattedDate;
	}

	public NesDateTime formattedDateTime(String formattedDateTime) {
		this.formattedDateTime = formattedDateTime;
		return this;
	}

	 /**
	 * &#39;yyyy-MM-dd HH:mm:ss SSS&#39; UTC+09:00 형태의 시간
	 * @return formattedDateTime
	**/
	public String getFormattedDateTime() {
		return formattedDateTime;
	}

	public void setFormattedDateTime(String formattedDateTime) {
		this.formattedDateTime = formattedDateTime;
	}


	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		NesDateTime nesDateTime = (NesDateTime) o;
		return Objects.equals(this.utc, nesDateTime.utc) &&
				Objects.equals(this.formattedDate, nesDateTime.formattedDate) &&
				Objects.equals(this.formattedDateTime, nesDateTime.formattedDateTime);
	}

	@Override
	public int hashCode() {
		return Objects.hash(utc, formattedDate, formattedDateTime);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class NesDateTime {\n");
		
		sb.append("		utc: ").append(toIndentedString(utc)).append("\n");
		sb.append("		formattedDate: ").append(toIndentedString(formattedDate)).append("\n");
		sb.append("		formattedDateTime: ").append(toIndentedString(formattedDateTime)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

